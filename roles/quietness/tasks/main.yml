- name: copying backend code over
  synchronize: src="backend" dest=/srv/backend recursive=yes archive=no links=yes

- name: copying frontend code
  synchronize: src="frontend" dest=/srv/frontend recursive=yes archive=no links=yes

- name: ensuring latest dockerfile
  copy: src=backend/Dockerfile dest=/srv/backend/Dockerfile

- name: place the nginx dockerfile from template
  command: mkdir -p /srv/nginx

- name: place the cassandra data dir
  command: mkdir -p /srv/cassandra

- name: place the nginx conf for its dockerfile
  template: src=nginx.conf dest=/srv/nginx/nginx.conf

- name: place the nginx dockerfile from template
  template: src=nginx.dockerfile dest=/srv/nginx/Dockerfile

- name: build uwsgi docker image
  command: docker build -t quietnessapi .
  args:
    chdir: /srv/backend

- name: build frontend docker image
  command: docker build -t quietnessfrontend .
  args:
    chdir: /srv/backend/frontend

- name: build nginx docker image
  command: docker build -t quietnessnginx .
  args:
    chdir: /srv/nginx

- name: download the cassandra image
  command: docker pull tobert/cassandra

- name: setup cassandra in upstart
  template: src=cassandra.upstart dest=/etc/init/cassandra.conf
    owner=root group=root mode=644

- name: setup quietness api in upstart
  template: src=quietness-docker.upstart dest=/etc/init/quietnessapi.conf
    owner=root group=root mode=644

- name: setup quietness frontend in upstart
  template: src=quietness-docker.upstart dest=/etc/init/quietnessfrontend.conf
    owner=root group=root mode=644

- name: setup nginx api in upstart
  template: src=nginx-quietness-docker.upstart dest=/etc/init/quietnessnginx.conf
    owner=root group=root mode=644

- name: start quietness api
  service: name=quietnessapi
    state=restarted

- name: start nginx
  service: name=quietnessnginx
    state=restarted
